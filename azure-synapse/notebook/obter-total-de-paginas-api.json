{
	"name": "obter-total-de-paginas-api",
	"properties": {
		"folder": {
			"name": "functions"
		},
		"nbformat": 4,
		"nbformat_minor": 2,
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "853e15ed-dcb2-44d7-9d5d-b4a2687fcb97"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "python"
			},
			"language_info": {
				"name": "python"
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"source": [
					"def obter_total_paginas_api(headers,url):\n",
					"\n",
					"\n",
					"    try:\n",
					"        response = requests.get(url, headers=headers)\n",
					"\n",
					"        response.raise_for_status()\n",
					"\n",
					"        data = response.json()\n",
					"\n",
					"        page_total = data['pagination']['pageTotal']\n",
					"\n",
					"        print(f\"Número total de páginas: {page_total}\")\n",
					"\n",
					"        return page_total\n",
					"    \n",
					"    except requests.exceptions.RequestException as e:\n",
					"\n",
					"        print(f\"Erro ao obter o número total de páginas: {e}\")\n",
					"\n",
					"        return None\n",
					""
				],
				"execution_count": null
			}
		]
	}
}